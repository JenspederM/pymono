name: Publish

on:
  push:
    branches:
      - main
      - master
jobs:
  integration_test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'bump:') && github.repository_owner_id == github.actor_id }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Integration Tests
        uses: ./.github/actions/uvtest
        with:
          name: uvmono
          path: .
          github_token: ${{ github.token }}
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: integration_test
    environment:
      name: pypi
      url: https://pypi.org/p/uvmono
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Sync Package
        run: uv sync
      - name: Build Package
        run: uv build
      - name: Set Name and Version from pyproject.toml to output
        id: project
        shell: bash
        run: |
          name=$(grep "^name" pyproject.toml -m 1 | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3 | tr "-" "_")
          version=$(grep "^version" pyproject.toml -m 1 | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3)
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "old_version=$version" >> $GITHUB_OUTPUT
          echo "Releasing $name version $version"
      - name: Create bump and changelog
        id: cz
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          changelog_increment_filename: body.md
          push: true
      - name: Publish Package Distributions to PyPI
        if: ${{ steps.project.old_version != steps.cz.outputs.version }}
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Upload release to GitHub
        uses: softprops/action-gh-release@v1
        if: ${{ steps.project.old_version != steps.cz.outputs.version }}
        env:
          PACKAGE_NAME: uvmono
          VERSION: ${{ steps.cz.outputs.version }}
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag_name: ${{ env.VERSION }}
          body_path: body.md
          files: |
            dist/${{ env.PACKAGE_NAME }}-${{ env.VERSION }}-py3-none-any.whl
            dist/${{ env.PACKAGE_NAME }}-${{ env.VERSION }}.tar.gz
