[project]
name = "package-d"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "Jens Peder Meldgaard", email = "jenspederm@gmail.com" }]
requires-python = ">=3.9"
dependencies = []

[project.scripts]
package-d = "package_d:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = """
--cov-report=term \
--cov-report=xml:coverage.xml \
--cov=package_d \
-ra
-vv"""

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff]
line-length = 88
show-fixes = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
] # Ruff format takes care of line-too-long
exclude = ["notebooks/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
use_shortcuts = true

[dependency-groups]
dev = ["pytest>=8.3.4", "pytest-cov>=6.0.0"]
